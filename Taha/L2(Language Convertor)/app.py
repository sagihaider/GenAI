from langchain_google_genai import ChatGoogleGenerativeAI
from dotenv import load_dotenv
from langchain_core.prompts import ChatPromptTemplate
import streamlit as st
from langchain_core.output_parsers import StrOutputParser

load_dotenv()


prompt = ChatPromptTemplate.from_messages([
    (
        "system",
        "You are a helpful assistant that translates {from_lang} to {to_lang}",
    ),
    ("human", "{input}"),
])
languages = [
   "Afar",
   "Abkhazian",
   "Avestan",
   "Afrikaans",
   "Akan",
   "Amharic",
   "Aragonese",
   "Arabic",
   "Assamese",
   "Avaric",
   "Aymara",
   "Azerbaijani",
   "Bashkir",
   "Belarusian",
   "Bulgarian",
   "Bihari languages",
   "Bislama",
   "Bambara",
   "Bengali",
   "Tibetan",
   "Breton",
   "Bosnian",
   "Catalan; Valencian",
   "Chechen",
   "Chamorro",
   "Corsican",
   "Cree",
   "Czech",
   "Chuvash",
   "Welsh",
   "Danish",
   "German",
   "Divehi; Dhivehi; Maldivian",
   "Dzongkha",
   "Ewe",
   "Greek, Modern (1453-)",
   "English",
   "Esperanto",
   "Spanish; Castilian",
   "Estonian",
   "Basque",
   "Persian",
   "Fulah",
   "Finnish",
   "Fijian",
   "Faroese",
   "French",
   "Western Frisian",
   "Irish",
   "Gaelic; Scomttish Gaelic",
   "Galician",
   "Guarani",
   "Gujarati",
   "Manx",
   "Hausa",
   "Hebrew",
   "Hindi",
   "Hiri Motu",
   "Croatian",
   "Haitian; Haitian Creole",
   "Hungarian",
   "Armenian",
   "Herero",
   "Indonesian",
   "Interlingue; Occidental",
   "Igbo",
   "Sichuan Yi; Nuosu",
   "Inupiaq",
   "Ido",
   "Icelandic",
   "Italian",
   "Inuktitut",
   "Japanese",
   "Javanese",
   "Georgian",
   "Kongo",
   "Kikuyu; Gikuyu",
   "Kuanyama; Kwanyama",
   "Kazakh",
   "Kalaallisut; Greenlandic",
   "Central Khmer",
   "Kannada",
   "Korean",
   "Kanuri",
   "Kashmiri",
   "Kurdish",
   "Komi",
   "Cornish",
   "Kirghiz; Kyrgyz",
   "Latin",
   "Luxembourgish; Letzeburgesch",
   "Ganda",
   "Limburgan; Limburger; Limburgish",
   "Lingala",
   "Lao",
   "Lithuanian",
   "Luba-Katanga",
   "Latvian",
   "Malagasy",
   "Marshallese",
   "Maori",
   "Macedonian",
   "Malayalam",
   "Mongolian",
   "Marathi",
   "Malay",
   "Maltese",
   "Burmese",
   "Nauru",
   "Ndebele, North; North Ndebele",
   "Nepali",
   "Ndonga",
   "Dutch; Flemish",
   "Norwegian Nynorsk; Nynorsk, Norwegian",
   "Norwegian",
   "Ndebele, South; South Ndebele",
   "Navajo; Navaho",
   "Chichewa; Chewa; Nyanja",
   "Occitan (post 1500)",
   "Ojibwa",
   "Oromo",
   "Oriya",
   "Ossetian; Ossetic",
   "Panjabi; Punjabi",
   "Pali",
   "Polish",
   "Pushto; Pashto",
   "Portuguese",
   "Quechua",
   "Romansh",
   "Rundi",
   "Romanian; Moldavian; Moldovan",
   "Russian",
   "Kinyarwanda",
   "Sanskrit",
   "Sardinian",
   "Sindhi",
   "Northern Sami",
   "Sango",
   "Sinhala; Sinhalese",
   "Slovak",
   "Slovenian",
   "Samoan",
   "Shona",
   "Somali",
   "Albanian",
   "Serbian",
   "Swati",
   "Sotho, Southern",
   "Sundanese",
   "Swedish",
   "Swahili",
   "Tamil",
   "Telugu",
   "Tajik",
   "Thai",
   "Tigrinya",
   "Turkmen",
   "Tagalog",
   "Tswana",
   "Tonga (Tonga Islands)",
   "Turkish",
   "Tsonga",
   "Tatar",
   "Twi",
   "Tahitian",
   "Uighur; Uyghur",
   "Ukrainian",
   "Urdu",
   "Uzbek",
   "Venda",
   "Vietnamese",
   "Volapük",
   "Walloon",
   "Wolof",
   "Xhosa",
   "Yiddish",
   "Yoruba",
   "Zhuang; Chuang",
   "Chinese",
   "Zulu"
]

col1, col2, col3 = st.columns([2, 1, 2])

with col1:
    from_lang = st.selectbox("From", languages, key="from_lang")

with col2:
    st.markdown("<div style='text-align: center; padding-top: 20px; font-size: 24px;'>➡️</div>", unsafe_allow_html=True)

with col3:
    to_lang = st.selectbox("To", languages, key="to_lang")
st.title("LangChain Language Converter with Google Generative AI")
input = st.text_input("Enter your text")
llm = ChatGoogleGenerativeAI(
    model="gemini-1.5-pro",
    temperature=0,
    max_tokens=None,
    timeout=None,
    max_retries=2,
    # other params...
)
chain = prompt | llm | StrOutputParser()
if input:
    response = chain.invoke({"input":input,"from_lang":from_lang,"to_lang":to_lang})
    st.write(response)
